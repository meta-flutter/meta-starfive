From 67096c46a4874962ca87030abe6dc77158c97dc9 Mon Sep 17 00:00:00 2001
From: LevyHsu <admin@levyhsu.com>
Date: Wed, 16 Jun 2021 10:34:18 +0800
Subject: [PATCH 11/28] [RISCV] Fix coding for [un]zip[2/4//8/16][n/b/h/w]

---
 .vscode/launch.json |  27 ++++++
 opcodes/riscv-opc.c | 201 ++++++++++++++++++++++----------------------
 2 files changed, 128 insertions(+), 100 deletions(-)
 create mode 100644 .vscode/launch.json

diff --git a/.vscode/launch.json b/.vscode/launch.json
new file mode 100644
index 0000000000..6da48c352b
--- /dev/null
+++ b/.vscode/launch.json
@@ -0,0 +1,27 @@
+{
+    // Use IntelliSense to learn about possible attributes.
+    // Hover to view descriptions of existing attributes.
+    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
+    "version": "0.2.0",
+    "configurations": [
+        {
+            "name": "(gdb) Launch",
+            "type": "cppdbg",
+            "request": "launch",
+            "program": "/home/levy/Desktop/freelight-e-studio/llvm-packaging-tool/install/bin/riscv64-unknown-elf-objdump",
+            "args": ["-S", "/home/levy/Desktop/freelight-e-studio/llvm-packaging-tool/test/b-ext/a.out"],
+            "stopAtEntry": true,
+            "cwd": "${fileDirname}",
+            "environment": [],
+            "externalConsole": false,
+            "MIMode": "gdb",
+            "setupCommands": [
+                {
+                    "description": "Enable pretty-printing for gdb",
+                    "text": "-enable-pretty-printing",
+                    "ignoreFailures": true
+                }
+            ]
+        }
+    ]
+}
\ No newline at end of file
diff --git a/opcodes/riscv-opc.c b/opcodes/riscv-opc.c
index ab2f80d00f..a01a5c9202 100644
--- a/opcodes/riscv-opc.c
+++ b/opcodes/riscv-opc.c
@@ -25,6 +25,7 @@
 #include <stdio.h>
 
 #define MASK_SHAMT (OP_MASK_SHAMT << OP_SH_SHAMT)
+#define MASK_SHAMT2 (OP_MASK_RS2 << OP_SH_SHAMT)
 #define MATCH_SHAMT_REV_32     (0b11111 << OP_SH_SHAMT)
 #define MATCH_SHAMT_REV_64     (0b111111 << OP_SH_SHAMT)
 #define MATCH_SHAMT_REV_P_32   (0b00001 << OP_SH_SHAMT)
@@ -61,56 +62,56 @@
 #define MATCH_SHAMT_REV16_64   (0b110000 << OP_SH_SHAMT)
 #define MATCH_SHAMT_REV16_W_64 (0b010000 << OP_SH_SHAMT)
 #define MATCH_SHAMT_REV32_64   (0b100000 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP_32     (0b11110 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP_64     (0b111110 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP_N_32   (0b00010 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP_N_64   (0b000010 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP_B_32   (0b00110 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP_B_64   (0b000110 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP_H_32   (0b01110 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP_H_64   (0b001110 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP_W_64   (0b011110 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP2_32    (0b11100 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP2_64    (0b111100 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP2_B_32  (0b00100 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP2_B_64  (0b000100 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP2_H_32  (0b01100 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP2_H_64  (0b001100 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP2_W_64  (0b011100 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP4_32    (0b11000 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP4_64    (0b111000 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP4_H_32  (0b01000 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP4_H_64  (0b001000 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP4_W_64  (0b011000 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP8_32    (0b10000 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP8_64    (0b110000 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP8_W_64  (0b010000 << OP_SH_SHAMT)
-#define MATCH_SHAMT_ZIP16_64   (0b100000 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP_32     (0b11111 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP_64     (0b111111 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP_N_32   (0b00011 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP_N_64   (0b000011 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP_B_32   (0b00111 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP_B_64   (0b000111 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP_H_32   (0b01111 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP_H_64   (0b001111 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP_W_64   (0b011111 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP2_32    (0b11101 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP2_64    (0b111101 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP2_B_32  (0b00101 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP2_B_64  (0b000101 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP2_H_32  (0b01101 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP2_H_64  (0b001101 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP2_W_64  (0b011101 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP4_32    (0b11001 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP4_64    (0b111001 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP4_H_32  (0b01001 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP4_H_64  (0b001001 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP4_W_64  (0b011001 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP8_32    (0b10001 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP8_64    (0b110001 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP8_W_64  (0b010001 << OP_SH_SHAMT)
-#define MATCH_SHAMT_UNZIP16_64   (0b100001 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP_32     (0b1111 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP_64     (0b11111 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP_N_32   (0b0001 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP_N_64   (0b00001 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP_B_32   (0b0011 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP_B_64   (0b00011 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP_H_32   (0b0111 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP_H_64   (0b00111 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP_W_64   (0b01111 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP2_32    (0b1110 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP2_64    (0b11110 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP2_B_32  (0b0010 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP2_B_64  (0b00010 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP2_H_32  (0b0110 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP2_H_64  (0b00110 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP2_W_64  (0b01110 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP4_32    (0b1100 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP4_64    (0b11100 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP4_H_32  (0b0100 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP4_H_64  (0b00100 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP4_W_64  (0b01100 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP8_32    (0b1000 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP8_64    (0b11000 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP8_W_64  (0b01000 << OP_SH_SHAMT)
+#define MATCH_SHAMT_ZIP16_64   (0b10000 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP_32     (0b1111 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP_64     (0b11111 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP_N_32   (0b0001 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP_N_64   (0b00001 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP_B_32   (0b0011 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP_B_64   (0b00011 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP_H_32   (0b0111 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP_H_64   (0b00111 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP_W_64   (0b01111 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP2_32    (0b1110 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP2_64    (0b11110 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP2_B_32  (0b0010 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP2_B_64  (0b00010 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP2_H_32  (0b0110 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP2_H_64  (0b00110 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP2_W_64  (0b01110 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP4_32    (0b1100 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP4_64    (0b11100 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP4_H_32  (0b0100 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP4_H_64  (0b00100 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP4_W_64  (0b01100 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP8_32    (0b1000 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP8_64    (0b11000 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP8_W_64  (0b01000 << OP_SH_SHAMT)
+#define MATCH_SHAMT_UNZIP16_64   (0b10000 << OP_SH_SHAMT)
 #define MATCH_SHAMT_ORC_32     (0b11111 << OP_SH_SHAMT)
 #define MATCH_SHAMT_ORC_64     (0b111111 << OP_SH_SHAMT)
 #define MATCH_SHAMT_ORC_P_32   (0b00001 << OP_SH_SHAMT)
@@ -1362,56 +1363,56 @@ const struct riscv_opcode riscv_opcodes[] =
 {"rev16",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_GREVI|MATCH_SHAMT_REV16_64, MASK_GREVI|MASK_SHAMT, match_opcode, 0 },
 {"rev16.w",   64, INSN_CLASS_ZBP,  "d,s",      MATCH_GREVI|MATCH_SHAMT_REV16_W_64, MASK_GREVI|MASK_SHAMT, match_opcode, 0 },
 {"rev32",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_GREVI|MATCH_SHAMT_REV32_64, MASK_GREVI|MASK_SHAMT, match_opcode, 0 },
-{"zip",       32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_32, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip",       64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip.n",     32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_N_32, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip.n",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_N_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip.b",     32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_B_32, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip.b",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_B_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip.h",     32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_H_32, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip.h",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_H_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip.w",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_W_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip2",      32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_32, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip2",      64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip2.b",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_B_32, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip2.b",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_B_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip2.h",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_H_32, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip2.h",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_H_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip2.w",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_W_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip4",      32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP4_32, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip4",      64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP4_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip4.h",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP4_H_32, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip4.h",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP4_H_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip4.w",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP4_W_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip8",      32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP8_32, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip8",      64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP8_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip8.w",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP8_W_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"zip16",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP16_64, MASK_SHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip",     32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_32, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip.n",   32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_N_32, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip.n",   64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_N_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip.b",   32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_B_32, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip.b",   64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_B_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip.h",   32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_H_32, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip.h",   64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_H_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip.w",   64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_W_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip2",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_32, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip2",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip2.b",  32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_B_32, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip2.b",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_B_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip2.h",  32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_H_32, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip2.h",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_H_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip2.w",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_W_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip4",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP4_32, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip4",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP4_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip4.h",  32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP4_H_32, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip4.h",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP4_H_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip4.w",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP4_W_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip8",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP8_32, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip8",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP8_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip8.w",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP8_W_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
-{"unzip16",   64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP16_64, MASK_UNSHFLI|MASK_SHAMT, match_opcode, 0 },
+{"zip",       32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_32, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip",       64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip.n",     32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_N_32, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip.n",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_N_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip.b",     32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_B_32, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip.b",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_B_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip.h",     32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_H_32, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip.h",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_H_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip.w",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP_W_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip2",      32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_32, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip2",      64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip2.b",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_B_32, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip2.b",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_B_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip2.h",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_H_32, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip2.h",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_H_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip2.w",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP2_W_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip4",      32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP4_32, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip4",      64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP4_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip4.h",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP4_H_32, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip4.h",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP4_H_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip4.w",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP4_W_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip8",      32, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP8_32, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip8",      64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP8_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip8.w",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP8_W_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"zip16",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_SHFLI|MATCH_SHAMT_ZIP16_64, MASK_SHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip",     32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_32, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip",     64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip.n",   32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_N_32, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip.n",   64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_N_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip.b",   32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_B_32, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip.b",   64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_B_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip.h",   32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_H_32, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip.h",   64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_H_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip.w",   64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP_W_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip2",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_32, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip2",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip2.b",  32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_B_32, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip2.b",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_B_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip2.h",  32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_H_32, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip2.h",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_H_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip2.w",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP2_W_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip4",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP4_32, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip4",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP4_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip4.h",  32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP4_H_32, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip4.h",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP4_H_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip4.w",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP4_W_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip8",    32, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP8_32, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip8",    64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP8_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip8.w",  64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP8_W_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
+{"unzip16",   64, INSN_CLASS_ZBP,  "d,s",      MATCH_UNSHFLI|MATCH_SHAMT_UNZIP16_64, MASK_UNSHFLI|MASK_SHAMT2, match_opcode, 0 },
 {"orc",       32, INSN_CLASS_ZBP,  "d,s",      MATCH_GORCI|MATCH_SHAMT_ORC_32, MASK_GORCI|MASK_SHAMT, match_opcode, 0 },
 {"orc",       64, INSN_CLASS_ZBP,  "d,s",      MATCH_GORCI|MATCH_SHAMT_ORC_64, MASK_GORCI|MASK_SHAMT, match_opcode, 0 },
 {"orc.p",     32, INSN_CLASS_ZBP,  "d,s",      MATCH_GORCI|MATCH_SHAMT_ORC_P_32, MASK_GORCI|MASK_SHAMT, match_opcode, 0 },
-- 
2.33.0

