From 219dd48b4a4adf5bee26eae3557b352732aca7fe Mon Sep 17 00:00:00 2001
From: Jun Yuan Tan <junyuan.tan@starfivetech.com>
Date: Fri, 22 Oct 2021 11:48:23 +0800
Subject: [PATCH] clang: driver: Add dyld-prefix when checking sysroot for ldso
 path

 * the dyld-prefix shall be taken into account when the default
   path for the dynamic linker has to be checked.

 * this patch shall be used as annex to the next patch:
   'clang: driver: Check sysroot for ldso path' which includes
   the usrmerge scenario.

Rebased to LLVM 14.0.0 by Jun Yuan Tan

Signed-off-by: Oleksandr Ocheretnyi <oocheret@cisco.com>
Signed-off-by: Khem Raj <raj.khem@gmail.com>
Signed-off-by: Jun Yuan Tan <junyuan.tan@starfivetech.com>
---
 clang/lib/Driver/ToolChains/Linux.cpp | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/clang/lib/Driver/ToolChains/Linux.cpp b/clang/lib/Driver/ToolChains/Linux.cpp
index e4bb78876fa0..2c49a2669d5a 100644
--- a/clang/lib/Driver/ToolChains/Linux.cpp
+++ b/clang/lib/Driver/ToolChains/Linux.cpp
@@ -480,8 +480,8 @@ std::string Linux::getDynamicLinker(const ArgList &Args) const {
     LibDir = "lib64";
     Loader =
         (tools::ppc::hasPPCAbiArg(Args, "elfv2")) ? "ld64.so.2" : "ld64.so.1";
-    if (!getVFS().exists(getDriver().SysRoot + "/" + LibDir + "/" + Loader) &&
-         getVFS().exists(getDriver().SysRoot + "/lib/" + Loader)) {
+    if (!getVFS().exists(getDriver().SysRoot + getDriver().DyldPrefix + "/" + LibDir + "/" + Loader) &&
+         getVFS().exists(getDriver().SysRoot + getDriver().DyldPrefix + "/lib/" + Loader)) {
         LibDir = "lib";
     }
     break;
@@ -489,8 +489,8 @@ std::string Linux::getDynamicLinker(const ArgList &Args) const {
     LibDir = "lib64";
     Loader =
         (tools::ppc::hasPPCAbiArg(Args, "elfv1")) ? "ld64.so.1" : "ld64.so.2";
-    if (!getVFS().exists(getDriver().SysRoot + "/" + LibDir + "/" + Loader) &&
-         getVFS().exists(getDriver().SysRoot + "/lib/" + Loader)) {
+    if (!getVFS().exists(getDriver().SysRoot + getDriver().DyldPrefix + "/" + LibDir + "/" + Loader) &&
+         getVFS().exists(getDriver().SysRoot + getDriver().DyldPrefix + "/lib/" + Loader)) {
         LibDir = "lib";
     }
     break;
@@ -514,8 +514,8 @@ std::string Linux::getDynamicLinker(const ArgList &Args) const {
   case llvm::Triple::sparcv9:
     LibDir = "lib64";
     Loader = "ld-linux.so.2";
-    if (!getVFS().exists(getDriver().SysRoot + "/" + LibDir + "/" + Loader) &&
-         getVFS().exists(getDriver().SysRoot + "/lib/" + Loader)) {
+    if (!getVFS().exists(getDriver().SysRoot + getDriver().DyldPrefix + "/" + LibDir + "/" + Loader) &&
+         getVFS().exists(getDriver().SysRoot + getDriver().DyldPrefix + "/lib/" + Loader)) {
         LibDir = "lib";
     }
     break;
@@ -532,8 +532,8 @@ std::string Linux::getDynamicLinker(const ArgList &Args) const {
 
     LibDir = X32 ? "libx32" : "lib64";
     Loader = X32 ? "ld-linux-x32.so.2" : "ld-linux-x86-64.so.2";
-    if (!getVFS().exists(getDriver().SysRoot + "/" + LibDir + "/" + Loader) &&
-         getVFS().exists(getDriver().SysRoot + "/lib/" + Loader)) {
+    if (!getVFS().exists(getDriver().SysRoot + getDriver().DyldPrefix + "/" + LibDir + "/" + Loader) &&
+         getVFS().exists(getDriver().SysRoot + getDriver().DyldPrefix + "/lib/" + Loader)) {
         LibDir = "lib";
     }
     break;
-- 
2.33.0

