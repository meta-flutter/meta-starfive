From 9236faa0a6258f823249732d748575db47a77fed Mon Sep 17 00:00:00 2001
From: "max.ma" <max.ma@starfivetech.com>
Date: Wed, 5 Jan 2022 19:20:42 -0800
Subject: [PATCH 07/24] ignore b&v version check if version is empty

---
 clang/lib/Driver/ToolChains/Arch/RISCV.cpp | 19 ++++++++++++++-----
 1 file changed, 14 insertions(+), 5 deletions(-)

diff --git a/clang/lib/Driver/ToolChains/Arch/RISCV.cpp b/clang/lib/Driver/ToolChains/Arch/RISCV.cpp
index 6aaf5f4806de..03997225cf38 100644
--- a/clang/lib/Driver/ToolChains/Arch/RISCV.cpp
+++ b/clang/lib/Driver/ToolChains/Arch/RISCV.cpp
@@ -58,13 +58,13 @@ static StringRef getExtensionType(StringRef Ext) {
 // extension that the compiler currently supports.
 static Optional<RISCVExtensionVersion>
 isExperimentalExtension(StringRef Ext) {
-  //if (Ext == "b" || Ext == "zba" || Ext == "zbb" || Ext == "zbc" ||
-  //    Ext == "zbs")
-  //  return RISCVExtensionVersion{"1", "0"};
+  if (Ext == "b" || Ext == "zba" || Ext == "zbb" || Ext == "zbc" ||
+      Ext == "zbs")
+    return RISCVExtensionVersion{"1", "0"};
   if (Ext == "zbproposedc")
     return RISCVExtensionVersion{"0", "94"};
-  //if (Ext == "v" || Ext == "zvamo" || Ext == "zvlsseg")
-  //  return RISCVExtensionVersion{"0", "10"};
+  if (Ext == "v" || Ext == "zvamo" || Ext == "zvlsseg")
+    return RISCVExtensionVersion{"0", "10"};
   if (Ext == "zfh")
     return RISCVExtensionVersion{"0", "1"};
   return None;
@@ -116,6 +116,15 @@ static bool getExtensionVersion(const Driver &D, const ArgList &Args,
 
   // If experimental extension, require use of current version number number
   if (auto ExperimentalExtension = isExperimentalExtension(Ext)) {
+    if (Ext == "b" || Ext == "zba" || Ext == "zba" || Ext == "zbc"
+        || Ext == "zbs" || Ext == "v")
+    {
+      // ignore b extension and v extension version number and ignore 
+      // menable-experimental-extensions if no version specified
+      // keep consistent with gcc command option
+      if (Major.empty() && Minor.empty())
+        return true;
+    }
     if (!Args.hasArg(options::OPT_menable_experimental_extensions)) {
       std::string Error =
           "requires '-menable-experimental-extensions' for experimental extension";
-- 
2.33.1

