From 8a858b3d00c405813ac6b38bf2f1f4eac53a9a48 Mon Sep 17 00:00:00 2001
From: "max.ma" <max.ma@starfivetech.com>
Date: Tue, 11 Jan 2022 21:41:56 -0800
Subject: [PATCH 12/24] fix incorrect v version

---
 clang/lib/Driver/ToolChains/Arch/RISCV.cpp | 32 ++++++++++++----------
 1 file changed, 17 insertions(+), 15 deletions(-)

diff --git a/clang/lib/Driver/ToolChains/Arch/RISCV.cpp b/clang/lib/Driver/ToolChains/Arch/RISCV.cpp
index ee3b69552437..a24b1fc9f673 100644
--- a/clang/lib/Driver/ToolChains/Arch/RISCV.cpp
+++ b/clang/lib/Driver/ToolChains/Arch/RISCV.cpp
@@ -64,7 +64,7 @@ isExperimentalExtension(StringRef Ext) {
   if (Ext == "zbproposedc")
     return RISCVExtensionVersion{"0", "94"};
   if (Ext == "v" || Ext == "zvamo" || Ext == "zvlsseg")
-    return RISCVExtensionVersion{"0", "10"};
+    return RISCVExtensionVersion{"1", "0"};    
   if (Ext == "zfh")
     return RISCVExtensionVersion{"0", "1"};
   return None;
@@ -123,21 +123,23 @@ static bool getExtensionVersion(const Driver &D, const ArgList &Args,
       // menable-experimental-extensions if no version specified
       // keep consistent with gcc command option
       if (Major.empty() && Minor.empty())
-        return true;
-    }
-    if (!Args.hasArg(options::OPT_menable_experimental_extensions)) {
-      std::string Error =
-          "requires '-menable-experimental-extensions' for experimental extension";
-      D.Diag(diag::err_drv_invalid_riscv_ext_arch_name)
-          << MArch << Error << Ext;
-      return false;
-    } else if (Major.empty() && Minor.empty()) {
-      std::string Error =
-          "experimental extension requires explicit version number";
-      D.Diag(diag::err_drv_invalid_riscv_ext_arch_name)
-          << MArch << Error << Ext;
-      return false;
+        return true;      
+    } else {
+      if (!Args.hasArg(options::OPT_menable_experimental_extensions)) {
+        std::string Error =
+            "requires '-menable-experimental-extensions' for experimental extension";
+        D.Diag(diag::err_drv_invalid_riscv_ext_arch_name)
+            << MArch << Error << Ext;
+        return false;
+      } else if (Major.empty() && Minor.empty()) {
+        std::string Error =
+            "experimental extension requires explicit version number";
+        D.Diag(diag::err_drv_invalid_riscv_ext_arch_name)
+            << MArch << Error << Ext;
+        return false;
+      }
     }
+
     auto SupportedVers = *ExperimentalExtension;
     if (Major != SupportedVers.Major || Minor != SupportedVers.Minor) {
       std::string Error =
-- 
2.33.1

