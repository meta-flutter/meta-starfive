From 973678842c55e4bccb070e5769efda6cb4060cb0 Mon Sep 17 00:00:00 2001
From: "max.ma" <max.ma@starfivetech.com>
Date: Mon, 27 Dec 2021 21:36:22 -0800
Subject: [PATCH 29/32] fix libcc compiling error

---
 libgcc/config/riscv/linux-unwind.h | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/libgcc/config/riscv/linux-unwind.h b/libgcc/config/riscv/linux-unwind.h
index ab3f2a42ddf..0710bdad1a7 100644
--- a/libgcc/config/riscv/linux-unwind.h
+++ b/libgcc/config/riscv/linux-unwind.h
@@ -50,6 +50,7 @@ riscv_fallback_frame_state (struct _Unwind_Context *context,
   uint16_t *pc = context->ra;
   struct sigcontext *sc;
   int i;
+  _Unwind_Ptr reg_ptr;
 
   /* A signal frame will have a return address pointing to
      __default_sa_restorer. This code is hardwired as:
@@ -71,19 +72,20 @@ riscv_fallback_frame_state (struct _Unwind_Context *context,
   fs->regs.cfa_reg = __LIBGCC_STACK_POINTER_REGNUM__;
   fs->regs.cfa_offset = new_cfa - (_Unwind_Ptr) context->cfa;
 
+  reg_ptr = (_Unwind_Ptr) &sc->sc_regs.pc;
   for (i = 0; i < 32; i++)
     {
       fs->regs.reg[i].how = REG_SAVED_OFFSET;
-      fs->regs.reg[i].loc.offset = (_Unwind_Ptr) &sc->gregs[i] - new_cfa;
+      fs->regs.reg[i].loc.offset = (_Unwind_Ptr) (reg_ptr + i) - new_cfa;
     }
 
   fs->signal_frame = 1;
   fs->retaddr_column = __LIBGCC_DWARF_ALT_FRAME_RETURN_COLUMN__;
   fs->regs.reg[fs->retaddr_column].how = REG_SAVED_VAL_OFFSET;
   fs->regs.reg[fs->retaddr_column].loc.offset =
-    (_Unwind_Ptr) sc->gregs[0] - new_cfa;
+    (_Unwind_Ptr) sc->sc_regs.pc - new_cfa;
 
   return _URC_NO_REASON;
 }
 
-#endif
+#endif
\ No newline at end of file
-- 
2.33.1

