From cd1e853a82c95213da61c4e5bee32c3fe9f7ef8d Mon Sep 17 00:00:00 2001
From: Kito Cheng <kito.cheng@sifive.com>
Date: Tue, 29 Dec 2020 14:12:07 +0800
Subject: [PATCH 45/60] WORKAROUND: Do not define MULTILIB_DEFAULTS

 - There is an issure for C++ header file search path if default
   ABI/arch has listed in multi-lib.

   e.g.
   Build GCC with --with-arch=rv64imafdc and --with-abi=lp64d, and has
   rv64imafdc-lp64d-- in multi-lib list, it will reuse default multi-lib
   path '.', however it still tried to search bits/c++config.h under
   path with rv64imafdc/lp64d.

 - So this workaround is undef MULTILIB_DEFAULTS to make sure
   rv64imafdc/lp64d won't reuse default library, so that could prevent
   such issue.
---
 gcc/config/riscv/riscv.h | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/gcc/config/riscv/riscv.h b/gcc/config/riscv/riscv.h
index c3f8d5df2bf..917e1bf4410 100644
--- a/gcc/config/riscv/riscv.h
+++ b/gcc/config/riscv/riscv.h
@@ -83,9 +83,11 @@ extern const char *riscv_multi_lib_check (int argc, const char **argv);
 #define STRINGIZING(s) __STRINGIZING(s)
 #define __STRINGIZING(s) #s
 
+#if 0
 #define MULTILIB_DEFAULTS \
   {"march=" STRINGIZING (TARGET_RISCV_DEFAULT_ARCH), \
    "mabi=" STRINGIZING (TARGET_RISCV_DEFAULT_ABI) }
+#endif
 
 #undef ASM_SPEC
 #define ASM_SPEC "\
-- 
2.25.1

